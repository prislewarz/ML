# Import packages
import numpy as np
import tensorflow as tf

from tensorflow.data import Dataset
from tensorflow.keras.datasets import fashion_mnist
from tensorflow.keras import Input, Model
from tensorflow.keras.layers import Dense
from tensorflow.keras.losses import CategoricalCrossentropy
from tensorflow.keras.metrics import CategoricalAccuracy
from tensorflow.keras.optimizers import SGD
from tensorflow.keras.optimizers.schedules import CosineDecay

# Config
batch_size = 100
epochs = 30
lr = 1e-2
momentum = 0.9

# Download fashion_mnist dataset
(train_image, train_label), (test_image, test_label) = fashion_mnist.load_data()

#Split train / validation sets
valid_image = train_image[55000:, :, :]
valid_label = train_label[55000:]
train_image = train_image[:55000, :, :]
train_label = train_label[:55000]

# Build dataset 1: Dataset loader
train_dataset = Dataset.from_tensor_slices((train_image, train_label))
valid_dataset = Dataset.from_tensor_slices((valid_image, valid_label))
test_dataset = Dataset.from_tensor_slices((test_image, test_label))

print("train_dataset", len(train_dataset))
print("valid_dataset", len(valid_dataset))
print("test_dataset", len(test_dataset))

# Build dataset 2: Preprocessing, Grouping
def preprocess(image, label):
    """ Preprocess image and label
        1) convert image type: 'uint8' -> 'float32'
        2) normalize image: 0 ~ 255 -> 0 ~ 1
        3) reshape image: (28, 28) -> 784
        4) convert label to one-hot vector
    """
    image = tf.cast(image, tf.float32)
    image = image / 255.0
    image = tf.reshape(image, (784,))
    label = tf.one_hot(label, depth=10, dtype=tf.float32)
    return image, label

 Build model
inputs = Input(shape=(784,), name='input')
x = Dense(10, activation="softmax", name='output')(inputs)
model = Model(inputs, x, name='linear')
model.summary()

# Build loss 
loss = CategoricalCrossentropy()
